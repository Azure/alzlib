---
name: Go test

on:
  push:
    paths-ignore:
      - ".github/**"
      - ".vscode/**"
    branches:
      - main
  pull_request_target:
    branches:
      - main
  workflow_dispatch:
  merge_group:
    types: [checks_requested]

permissions:
  contents: read
  id-token: write

jobs:
  test:
    environment: test
    if: |
      (
        github.event.pull_request.head.repo.full_name == 'Azure/alzlib'
      )
      ||
      (
        github.event.pull_request.head.repo.full_name != 'Azure/alzlib'
        &&
        contains(github.event.pull_request.labels.*.name, 'PR: Safe to test :test_tube:')
      )
      ||
      (
        github.event_name == 'workflow_dispatch'
      )
      ||
      (
        github.event_name == 'merge_group'
      )
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        name: checkout
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          persist-credentials: false

      - uses: actions/setup-go@0a12ed9d6a96ab950c8f026ed9f722fe0da7ef32 # v5.0.2
        name: setup go
        with:
          go-version-file: "go.mod"
          cache: true

      - uses: azure/login@6c251865b4e6290e7b78be643ea2d005bc51f69a # v2.1.1
        name: Azure login
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          allow-no-subscriptions: true

      - run: make test
        name: make test
        # Tests are run on Linux using make testcover
        if: matrix.os != 'ubuntu-latest'

      - run: make testrace
        name: make testrace
        if: matrix.os == 'ubuntu-latest'

      - run: make testcover
        name: make testcover
        if: matrix.os == 'ubuntu-latest'

      - uses: codecov/codecov-action@e28ff129e5465c2c0dcc6f003fc735cb6ae0c673 # v4.5.0
        if: matrix.os == 'ubuntu-latest' && github.event_name != 'merge_group'
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.out
